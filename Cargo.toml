[package]
name = "zero2prod"
version = "0.1.0"
edition = "2021"

[lib]
# 어떤 형태의 결로든 기술할 수 있지만, 커뮤니티의 관습을 따른다
# 'name'필트를 사용해서 라이브러리 이름을 지정한다. 지정하지 않으면, cargo는 'package.name'을 사용한다. 우리가 원하는 바이다.
path = "src/lib.rs"

# 이중 대괄호를 사용한 것에 주의하자. TOML에서의 배열 표기 문법이다.
# 프로젝트에 하나의 라이브러리는 물론, 여러 바이너리를 포함할 수도  있다.
# 동일한 저장소에서 여러 라이브러리를 관리하고자 한다면, workspace 피처를 살펴보기 바란다.(추후에 다룸)
[[bin]]
path = "src/main.rs"
name = "zero2prod"

[dev-dependencies]
once_cell = "1"
claim = "0.5"
# We are not using fake >= 2.4 because it relies on rank 0.8
# which has been recently released and it is not yet used by quickcheck ( solved in its upcoming 1.0 release!)
# fake >= 2.4는 rand 0.8에 의존하므로 사용하지 않는다. 0.8은 최근에 릴리스 되었으면 아직 quickcheck에서 사용되지 않았다
fake = "~2.3"
quickcheck = "0.9.2"
quickcheck_macros = "0.9.1"
wiremock = "0.5"
serde_json = "1"
linkify = "0.8"

[dependencies]
actix-web="4"
tokio={version="1", features=["macros","rt-multi-thread"]}
# 옵셔널 derive 피처를 사용해야, serde 의 절차적 매크로인 #[derve(Serialize)] 와 #[derive(Deserialize)] 를 사용할 수 있다.
# 이 피터는 기본으로 활성화되어 있지 않다. 프로젝트에 불필요한 디펜던시를 사용하지 않도록 하기 위해서이다.
serde = {version = "1", features = ["derive"]}
# 환경 변수들은 config 크레이트를 위한 문자열이며, serde의 표준 역직렬화 루틴을 사용하는 경우에는 정수를 선택할 수없다.
# 커스텀 역직렬화 함수를 지정할 수 있음
serde-aux = "3"
config = "0.13"
uuid = {version = "1", features = ["v4"]}
chrono = {version = "0.4.22", default-features = false, features = ["clock"]}
tracing = {version = "0.1", features = ["log"]}
tracing-subscriber = {version = "0.3", features = ["registry", "env-filter"]}
tracing-bunyan-formatter = "0.3"
tracing-log = "0.1"
secrecy = {version = "0.8", features = ["serde"]}
tracing-actix-web = "0.6"
unicode-segmentation = "1"
validator = "0.14"
reqwest = { version = "0.11", default-features = false, features = [
    "json",
    "rustls-tls",
    "cookies",
] }
# We need the 'std_rng' to get access to the PRNG we want (원하는 PRNG에 엑세스하려면 'std_rng'가 필요하다.)
rand = {version = "0.8", features=["std_rng"]}
thiserror = "1"
anyhow = "1"

# 테이블과 유사한 toml 구문을 사용해서 킨 코드 행을 줄이자
# docker build 시 cargo build를 도커 이미지 안에서 실행하면, sqlx는 .env 파일의 DATABASE_URL 환결 변수가 가리키는 데이터베이스와 커넥션을 만드는데 실패함 
# -> "offline" 추가
[dependencies.sqlx]
version = "0.6.3"
default-features = false
features = [
    "runtime-tokio-rustls",
    "macros",
    "postgres",
    "uuid",
    "chrono",
    "migrate",
    "offline"
]